{
	"name": "pl_verify_fileset",
	"properties": {
		"activities": [
			{
				"name": "get_list_of_files",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "get_job_params",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_cloud_files",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@activity('get_job_params').output.firstRow.container",
								"type": "Expression"
							},
							"folder": {
								"value": "@activity('get_job_params').output.firstRow.folder",
								"type": "Expression"
							},
							"file_pattern": {
								"value": "@activity('get_job_params').output.firstRow.file_pattern",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "get_job_params",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[etl].[GetJobParams]",
						"storedProcedureParameters": {
							"JobName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.content",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azure_sql_database",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "accumulate_file_names",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get_list_of_files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get_list_of_files').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "save_accumulated_names",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "temp",
								"value": {
									"value": "@variables('all_file_names')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "update_list",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "save_accumulated_names",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "all_file_names",
								"value": {
									"value": "@concat(variables('temp'), substring(item().name, 0, indexof(item().name, '.')), ',')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "deduplicate",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "accumulate_file_names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select distinct [value] from string_split(''',\nsubstring(variables('all_file_names'), 0, sub(length(variables('all_file_names')),1)),\n''', '','')')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azure_sql_database",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "move_fileset_to_processing",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "deduplicate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('deduplicate').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "check_csv",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_cloud_files",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@activity('get_job_params').output.firstRow.container",
											"type": "Expression"
										},
										"folder": {
											"value": "@activity('get_job_params').output.firstRow.folder",
											"type": "Expression"
										},
										"file_pattern": {
											"value": "@concat(item().value, '.csv')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "check_ctl",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_cloud_files",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@activity('get_job_params').output.firstRow.container",
											"type": "Expression"
										},
										"folder": {
											"value": "@activity('get_job_params').output.firstRow.folder",
											"type": "Expression"
										},
										"file_pattern": {
											"value": "@concat(item().value, '.ctl')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "if_all_files_exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "check_csv",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "check_ctl",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(activity('check_csv').output.exists, activity('check_ctl').output.exists)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "set_result_false",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "pipelineReturnValue",
											"value": [
												{
													"key": "result",
													"value": {
														"type": "Boolean",
														"content": false
													}
												}
											],
											"setSystemVariable": true
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "set_result_true",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "pipelineReturnValue",
											"value": [
												{
													"key": "result",
													"value": {
														"type": "Boolean",
														"content": true
													}
												}
											],
											"setSystemVariable": true
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"content": {
				"type": "string",
				"defaultValue": "products"
			}
		},
		"variables": {
			"all_file_names": {
				"type": "String"
			},
			"temp": {
				"type": "String"
			}
		},
		"annotations": []
	}
}